
(function(l, i, v, e) { v = l.createElement(i); v.async = 1; v.src = '//' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; e = l.getElementsByTagName(i)[0]; e.parentNode.insertBefore(v, e)})(document, 'script');
(function () {
    'use strict';

    var debounce = (callback, threshold = 20) => {
        let timeout;
        let execution = () => {
            clearTimeout(timeout);
            timeout = setTimeout(callback, threshold);
        };

        return execution;
    };

    const DEFAULT_PROPS = {
        aspectX: 16,
        aspectY: 10,
        clearColor: 'rgba(0, 0, 0, 1)',
        root: document.body
    };

    var createScene = (userProps = {}) => {
        const props = Object.assign({
            canvas: document.createElement('canvas')
        }, DEFAULT_PROPS, userProps);

        let animationFrame = null;
        let delta, xMin, xMax, ballSize;
        let x = props.canvas.width / 2;

        //
        function init() {
            let {canvas, root} = props;

            window.addEventListener('resize', () => {
                pause();
            });

            window.addEventListener('resize', debounce(() => {
                resize();
                play();
            }));
            resize();

            root.appendChild(canvas);
        }

        //
        function play() {
            let {canvas} = props;
            let context = canvas.getContext('2d');

            animationFrame = window.requestAnimationFrame(play);
            context.clearRect(0, 0, canvas.width, canvas.height);

            context.beginPath();
            context.arc(x, canvas.height / 2, ballSize, 0, Math.PI * 2);
            context.fillStyle = '#09f';
            context.fill();
            context.closePath();

            x = x + delta;

            if ((x > xMax) || (x < xMin)) {
                delta = -delta;
            }
        }

        //
        function pause() {
            if (animationFrame) {
                window.cancelAnimationFrame(animationFrame);
                animationFrame = null;
            }
        }

        //
        function resize() {
            let {canvas, aspectX, aspectY, root} = props;
            let containerWidth = root.innerWidth || root.clientWidth;
            let containerHeight = root.innerHeight || root.clientHeight;

            let canvasWidth = containerWidth;
            let canvasHeight = (containerWidth * aspectY) / aspectX;

            if (canvasHeight > containerHeight) {
                canvasHeight = containerHeight;
                canvasWidth = (containerHeight * aspectX) / aspectY;
            }

            canvas.setAttribute('width', Math.floor(canvasWidth));
            canvas.setAttribute('height', Math.floor(canvasHeight));

            let oldDelta = delta || Math.floor(canvas.width / 100);

            ballSize = Math.floor(canvas.width * 0.03);
            delta = Math.floor(canvas.width / 100);
            x = (delta * x) / oldDelta;
            xMin = ballSize;
            xMax = canvas.width - ballSize;

            // console.log('Stuff', x, delta, xMin, xMax, ballSize);
        }

        return {
            props,
            init,
            play
        };
    };

    function styleInject(css, ref) {
      if ( ref === void 0 ) ref = {};
      var insertAt = ref.insertAt;

      if (!css || typeof document === 'undefined') { return; }

      var head = document.head || document.getElementsByTagName('head')[0];
      var style = document.createElement('style');
      style.type = 'text/css';

      if (insertAt === 'top') {
        if (head.firstChild) {
          head.insertBefore(style, head.firstChild);
        } else {
          head.appendChild(style);
        }
      } else {
        head.appendChild(style);
      }

      if (style.styleSheet) {
        style.styleSheet.cssText = css;
      } else {
        style.appendChild(document.createTextNode(css));
      }
    }

    var css = "html, body {\r\n    margin: 0;\r\n}\r\n\r\nbody {\r\n    background: black;\r\n    width: 100vw;\r\n    height: 100vh;\r\n}\r\n\r\ncanvas {\r\n    display: block;\r\n    margin: auto;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtDQUNiOztBQUVEO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixjQUFjO0NBQ2pCOztBQUVEO0lBQ0ksZUFBZTtJQUNmLGFBQWE7Q0FDaEIiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLCBib2R5IHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbn1cclxuXHJcbmNhbnZhcyB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG4iXX0= */";
    styleInject(css);

    let scene = createScene();
    scene.init();
    scene.play();

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
